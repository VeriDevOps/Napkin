###############################################
# Base Image from https://www.mktr.ai/the-data-scientists-quick-guide-to-dockerfiles-with-examples/
###############################################
FROM python:3.8-slim as python-base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \ 
    PIP_NO_CACHE_DIR=off  \
    PIP_DISABLE_PIP_VERSION_CHECK=on \ 
    PIP_DEFAULT_TIMEOUT=100  \ 
    POETRY_VERSION=1.0.5 \
    POETRY_HOME="/opt/poetry" \ 
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    PYSETUP_PATH="/opt/pysetup" \ 
    VENV_PATH="/opt/pysetup/.venv" 

# prepend poetry and venv to path
ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

###############################################
# Builder Image
###############################################
FROM python-base as builder-base
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    curl \
    build-essential

# install poetry - respects $POETRY_VERSION & $POETRY_HOME
RUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python

# copy project requirement files here to ensure they will be cached.
WORKDIR $PYSETUP_PATH
COPY poetry.lock pyproject.toml ./

# install runtime deps - uses $POETRY_VIRTUALENVS_IN_PROJECT internally
RUN poetry install --no-dev


###############################################
# Local Libraries Image
###############################################
FROM python-base as production-base
COPY --from=builder-base $PYSETUP_PATH $PYSETUP_PATH

RUN  ["mkdir","-p","/napkin/"]
COPY packages_src/ napkin/packages_src
RUN pip install -e /napkin/packages_src/bt

###############################################
# Production Image
###############################################
FROM production-base

RUN  ["mkdir","-p","/napkin/dist"]
COPY ./Docker/.env /napkin/
#COPY session/ /napkin/session
COPY server/sock_srv.py /napkin/server/

EXPOSE 4001

CMD ["python", "/napkin/server/sock_srv.py"]
# docker container run --interactive --mount type=bind,source=/Users/dfm01/Documents/aProjects/napkin/session,target=/napkin/session --tty --rm napkin bash

